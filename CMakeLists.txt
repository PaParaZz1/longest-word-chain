CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(longest_word_chain)

SET(TARGET_ARCHITECTURE "linux")

SET(ALL_INCLUDE
    ${CMAKE_CURRENT_SOURCE_DIR}/include/
	)
INCLUDE_DIRECTORIES(${ALL_INCLUDE})

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -g -O3")

SET(CORE_SRC
    ${CMAKE_CURRENT_SOURCE_DIR}/src/se_word_chain_core.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/se_word_chain_utils.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/se_word_chain_interface.cpp
)

SET(ALL_SRC
    ${CORE_SRC}
    ${CMAKE_CURRENT_SOURCE_DIR}/src/main.cpp
)

ADD_EXECUTABLE(Wordlist
    ${ALL_SRC}
)

IF(${TARGET_ARCHITECTURE} STREQUAL "windows")
    ADD_LIBRARY(Core SHARED ${CORE_SRC})
ENDIF()

IF(${TARGET_ARCHITECTURE} STREQUAL "linux")
    ADD_LIBRARY(Core SHARED ${CORE_SRC})
ENDIF()

